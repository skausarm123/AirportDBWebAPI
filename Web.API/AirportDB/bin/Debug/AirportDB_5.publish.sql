/*
Deployment script for MinimalAPIDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "MinimalAPIDB"
:setvar DefaultFilePrefix "MinimalAPIDB"
:setvar DefaultDataPath "C:\Users\Mohammed Irfan B\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Mohammed Irfan B\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 6f31fdce-6184-4c80-a69d-d6b92c91699f is skipped, element [dbo].[Countries].[GeographyLevel1D] (SqlSimpleColumn) will not be renamed to GeographyLevel1ID';


GO
PRINT N'Rename refactoring operation with key b2a91b34-dd20-4901-8b96-d6ce775f270a is skipped, element [dbo].[Countries].[Id] (SqlSimpleColumn) will not be renamed to GeographyLevel1ID';


GO
PRINT N'Rename refactoring operation with key 37d9fda0-4815-4ad6-8f16-96018d666123 is skipped, element [dbo].[Route].[Id] (SqlSimpleColumn) will not be renamed to RouteID';


GO
PRINT N'Rename refactoring operation with key d1f314e2-6ed3-45a6-b070-47fa165745ee is skipped, element [dbo].[AirportGroup].[Id] (SqlSimpleColumn) will not be renamed to AirportGroupID';


GO
PRINT N'Starting rebuilding table [dbo].[Airport]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Airport] (
    [Id]                INT           IDENTITY (1, 1) NOT NULL,
    [IATACode]          NVARCHAR (50) NULL,
    [GeographyLevel1ID] INT           NULL,
    [Type]              NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Airport])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Airport] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Airport] ([Id], [IATACode], [GeographyLevel1ID], [Type])
        SELECT   [Id],
                 [IATACode],
                 [GeographyLevel1ID],
                 [Type]
        FROM     [dbo].[Airport]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Airport] OFF;
    END

DROP TABLE [dbo].[Airport];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Airport]', N'Airport';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating Table [dbo].[AirportGroup]...';


GO
CREATE TABLE [dbo].[AirportGroup] (
    [AirportGroupID] INT           IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([AirportGroupID] ASC)
);


GO
PRINT N'Creating Table [dbo].[Countries]...';


GO
CREATE TABLE [dbo].[Countries] (
    [GeographyLevel1ID] INT           IDENTITY (1, 1) NOT NULL,
    [Name]              NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([GeographyLevel1ID] ASC)
);


GO
PRINT N'Creating Table [dbo].[Route]...';


GO
CREATE TABLE [dbo].[Route] (
    [RouteID]          INT IDENTITY (1, 1) NOT NULL,
    [DepartureID]      INT NULL,
    [ArrivalAirportID] INT NULL,
    PRIMARY KEY CLUSTERED ([RouteID] ASC)
);


GO
PRINT N'Creating Procedure [dbo].[DeleteCountry]...';


GO
CREATE PROCEDURE [dbo].[DeleteCountry]
@GeographyLevel1ID INT
AS
IF NOT EXISTS(SELECT GeographyLevel1ID FROM Countries WHERE GeographyLevel1ID=@GeographyLevel1ID)
BEGIN
IF NOT EXISTS(SELECT GeographyLevel1ID FROM Airport WHERE GeographyLevel1ID=@GeographyLevel1ID)
  BEGIN
	DELETE Countries WHERE GeographyLevel1ID=@GeographyLevel1ID
  END
END

RETURN 0
GO
PRINT N'Creating Procedure [dbo].[SP_GetCountries]...';


GO
CREATE PROCEDURE [dbo].[SP_GetCountries]
	
AS
	SELECT * FROM Countries
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[SP_GetRoutes]...';


GO
CREATE PROCEDURE [dbo].[SP_GetRoutes]
	
AS
	SELECT * FROM Route
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[SP_InsertCountry]...';


GO
CREATE PROCEDURE [dbo].[SP_InsertCountry]
	@Name NVARCHAR(50)
AS
IF NOT EXISTS(SELECT Name FROM Countries WHERE Name=@Name)
INSERT INTO Countries([Name]) VALUES(@Name)
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[SP_InsertRoute]...';


GO
CREATE PROCEDURE [dbo].[SP_InsertRoute]
	@DepartureAirportID INT,
	@ArrivalAirportID INT
AS
IF NOT EXISTS(SELECT DepartureID,ArrivalAirportID FROM Route WHERE DepartureID=@DepartureAirportID AND ArrivalAirportID=@ArrivalAirportID)
BEGIN
IF EXISTS(SELECT ID FROM Airport WHERE ID IN(@DepartureAirportID,@ArrivalAirportID))
BEGIN
	INSERT INTO Route(DepartureID,ArrivalAirportID) VALUES(@DepartureAirportID,@ArrivalAirportID)
END
END
RETURN 0
GO
PRINT N'Refreshing Procedure [dbo].[SP_GetAiportDetailWithID]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[SP_GetAiportDetailWithID]';


GO
PRINT N'Refreshing Procedure [dbo].[SP_GetAirportDetails]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[SP_GetAirportDetails]';


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6f31fdce-6184-4c80-a69d-d6b92c91699f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6f31fdce-6184-4c80-a69d-d6b92c91699f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b2a91b34-dd20-4901-8b96-d6ce775f270a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b2a91b34-dd20-4901-8b96-d6ce775f270a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '37d9fda0-4815-4ad6-8f16-96018d666123')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('37d9fda0-4815-4ad6-8f16-96018d666123')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd1f314e2-6ed3-45a6-b070-47fa165745ee')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d1f314e2-6ed3-45a6-b070-47fa165745ee')

GO

GO
if not exists(select 1 from dbo.[Airport])
begin
insert into dbo.[Airport] 
values('LGW',1,'Departure and Arrival')
insert into dbo.[Airport] 
values('PMI',2,'Arrival Only')
insert into dbo.[Airport] 
values('LAX',3,'Arrival Only')

end
GO

GO
PRINT N'Update complete.';


GO
